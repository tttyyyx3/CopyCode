#include "stdAfx.h"
#include "CFindWindow.h"

CFindWindow::CFindWindow(void)
:m_hWnd(NULL), m_classname(NULL)
{
}

CFindWindow::~CFindWindow(void)
{
}

void CFindWindow::FindWin(HWND hwndParent, LPCSTR classname)
{
m_hWnd=NULL;
m_classname=classname;
FindChildClassHwnd(hwndParent,LPARAM(this));
}

BOOL CALLBACK CFindWindow::FindChildClassHwnd(HWND hwndParent,LPARAM lParam)
{
    CFindWindow *pfw = (CFindWindow*)lParam;
    HWND hwnd = FindWindowEx(hwndParent, NULL, pfw->m_classname, NULL);
    if (hwnd) {
        pfw->m_hWnd = hwnd;
        return FALSE; //停止枚举 并返回
    }
    EnumChildWindows(hwndParent, FindChildClassHwnd, lParam); //枚举所有子窗口
return TRUE;
};




	*syj_find 遍历数据库函数
*/
static void ArxProject2syj_find(void)
{
// Add your code for command ArxProject2.syj_find here
//打开数据库并迭代遍历其中的实体.
AcDbObjectId objId;
AcDbDatabase * pDb = acdbHostApplicationServices()->workingDatabase();
AcDbBlockTable *pBlockTable =NULL;
pDb->getBlockTable(pBlockTable, AcDb::kForRead);
AcDbBlockTableRecord *pBlockTableRecord =NULL;
pBlockTable->getAt(ACDB_MODEL_SPACE,pBlockTableRecord, AcDb:: kForRead);
pBlockTable->close();
//迭代器
AcDbBlockTableRecordIterator *pIter = NULL;
pBlockTableRecord->newIterator(pIter); // Create an iterator
for (pIter->start(); !pIter->done(); pIter->step())
{

AcDbEntity *pEntity = NULL;
if (pIter->getEntity(pEntity, AcDb::kForRead) != Acad::eOk)
continue;
if(pEntity->isKindOf(AcDbCircle::desc()))
objId = pEntity->objectId();
}
pBlockTableRecord->close();
}


